{"version":3,"sources":["client.js","App.js","index.js"],"names":["supabaseClient","createClient","App","useState","user","setUser","authorizeUser","a","auth","signIn","provider","signOut","useEffect","window","addEventListener","className","email","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wNAMMA,EAAiBC,YAAa,2CACA,uJCsDrBC,MAzDf,WAAe,MAGcC,mBAAS,MAHvB,mBAGLC,EAHK,KAGEC,EAHF,cAiBEC,IAjBF,2EAiBb,4BAAAC,EAAA,sDACQH,EAAOJ,EAAeQ,KAAKJ,OACjCC,EAAQD,GAFV,4CAjBa,kEAuBb,sBAAAG,EAAA,sEACQP,EAAeQ,KAAKC,OAAO,CAC/BC,SAAU,WAFd,4CAvBa,kEA8Bb,sBAAAH,EAAA,sEACQP,EAAeQ,KAAKG,UAD5B,OAEEN,EAAQ,MAFV,4CA9Ba,sBAoCb,OA9BAO,qBAAU,WAGRN,IAGAO,OAAOC,iBAAiB,cAAc,WACpCR,SAEF,IAqBCF,EAEC,qBAAKW,UAAU,MAAf,SACE,sBAAKA,UAAU,OAAf,UACM,qCAAQX,EAAKY,MAAb,OACA,wBAAQC,QAzCP,2CAyCD,2BAOV,qBAAKF,UAAU,MAAf,SACE,sBAAKA,UAAU,OAAf,UACM,+DACA,wBAAQE,QAnDL,2CAmDH,2BCnDZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.cc0c74fa.chunk.js","sourcesContent":["import { createClient } from '@supabase/supabase-js';\r\n\r\n// creating a new client takes two arguments:\r\n// 1. the URL of the database\r\n// 2. the API key\r\n// you can get both of them from the supabase dashboard by clicking the API key button\r\nconst supabaseClient = createClient('https://mvsayxxgkiutyncrvevg.supabase.co' , \r\n                                    'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiYW5vbiIsImlhdCI6MTY0MzY0ODMwOCwiZXhwIjoxOTU5MjI0MzA4fQ.Nq7_8LDDASZhZi2LIL4zIlkbAa6YTuEIroRtwmBEPZ0' );\r\n\r\nexport{\r\n    supabaseClient\r\n}","import { useState , useEffect } from 'react';\r\nimport './App.css';\r\nimport { supabaseClient } from './client';\r\n\r\nfunction App() {\r\n\r\n  // creating the user state\r\n  const [ user , setUser ] = useState(null);\r\n\r\n  // configuring useEffect\r\n  useEffect(() => {\r\n\r\n    // calling the authorizeUser function\r\n    authorizeUser();\r\n\r\n    // window event listener to recall the user after the OAuth redirect happens\r\n    window.addEventListener('hashchange', function(){\r\n      authorizeUser();\r\n    });\r\n  },[]);\r\n\r\n  async function authorizeUser() {\r\n    const user = supabaseClient.auth.user();\r\n    setUser(user);\r\n  }\r\n\r\n  // function to sign in with github \r\n  async function signInWithGithub() {\r\n    await supabaseClient.auth.signIn({\r\n      provider: 'github',\r\n    });\r\n  }\r\n\r\n  // function to sign out\r\n  async function signout(){\r\n    await supabaseClient.auth.signOut();\r\n    setUser(null);\r\n  }\r\n\r\n  // if the user exists\r\n  if(user){\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"card\">\r\n              <p>Hey {user.email} </p>\r\n              <button onClick={signout}>Sign Out</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"card\">\r\n            <p>Hey new user , please sign in </p>\r\n            <button onClick={signInWithGithub}>Sign In</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}